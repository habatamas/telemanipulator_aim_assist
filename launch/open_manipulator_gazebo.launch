<launch>
  <rosparam file="$(find telemanipulator_aim_assist)/config/gazebo_controller.yaml" command="load" />

  <!-- World File -->
  <arg name="world_file" default="$(find telemanipulator_aim_assist)/worlds/world_test.world"/>

  <!-- Launch Gazebo World -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="true" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
   command="$(find xacro)/xacro --inorder '$(find telemanipulator_aim_assist)/urdf/open_manipulator.urdf.xacro'"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
     args="-urdf -model open_manipulator -z 0.964762 -param robot_description"/>


  <!-- ros_control robotis manipulator launch file -->
  <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_controller.launch"/>

  <!-- send table urdf to param server -->
  <param name="kocka_description" command="$(find xacro)/xacro.py $(find telemanipulator_aim_assist)/urdf/kocka.urdf.xacro" />

  <!-- push table_description to factory and spawn robot in gazebo -->
  <node name="spawn_kocka" pkg="gazebo_ros" type="spawn_model" args="-urdf -param kocka_description -x 0.259 -z 1 -model kocka_model" respawn="false" output="screen" />
  <node name="spawn_kocka2" pkg="gazebo_ros" type="spawn_model" args="-urdf -param kocka_description -x 0.259 -z 1.1 -model kocka_model2" respawn="false" output="screen" />

</launch>